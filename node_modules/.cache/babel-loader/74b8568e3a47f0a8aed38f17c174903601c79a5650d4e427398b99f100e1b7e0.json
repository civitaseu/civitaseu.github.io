{"ast":null,"code":"var _jsxFileName = \"/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/download_button.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\nimport styles from 'utilities/global_styles.module.css';\nimport { Platform } from './app_download_button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handlePlatformClick = platform => {\n    handleClose(); // Close the current dialog\n    setTimeout(() => {\n      // Open the new dialog after a short delay\n      console.log(`Opening download dialog for ${platform}`);\n      // Here, you can trigger the opening of the new dialog or any other action.\n    }, 300); // 300ms delay to allow the dialog to close smoothly\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: styles.actionButtonPrimary,\n      onClick: handleClickOpen,\n      children: \"Download App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableScrollLock: true,\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        sx: {\n          backgroundColor: 'white',\n          borderRadius: \"20px\",\n          color: 'black',\n          padding: '20px',\n          maxWidth: '400px',\n          width: '100%',\n          boxSizing: 'border-box',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: \"Select a platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          flexDirection: 'column',\n          gap: '10px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handlePlatformClick(Platform.iOS),\n          children: \"Download for iOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handlePlatformClick(Platform.Android),\n          children: \"Download for Android\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(DownloadButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","useState","Button","Dialog","DialogActions","DialogTitle","styles","Platform","jsxDEV","_jsxDEV","DownloadButton","_s","open","setOpen","handleClickOpen","handleClose","handlePlatformClick","platform","setTimeout","console","log","children","variant","className","actionButtonPrimary","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disableScrollLock","onClose","PaperProps","sx","backgroundColor","borderRadius","color","padding","maxWidth","width","boxSizing","display","justifyContent","alignItems","overflow","textAlign","flexDirection","gap","iOS","Android","_c","$RefreshReg$"],"sources":["/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/download_button.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\nimport styles from 'utilities/global_styles.module.css';\nimport AppDownloadButton, { Platform } from './app_download_button';\n\nconst DownloadButton = () => {\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handlePlatformClick = (platform: Platform) => {\n        handleClose(); // Close the current dialog\n        setTimeout(() => {\n            // Open the new dialog after a short delay\n            console.log(`Opening download dialog for ${platform}`);\n            // Here, you can trigger the opening of the new dialog or any other action.\n        }, 300); // 300ms delay to allow the dialog to close smoothly\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                className={styles.actionButtonPrimary}\n                onClick={handleClickOpen}\n            >\n                Download App\n            </Button>\n            <Dialog\n                disableScrollLock\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    sx: {\n                        backgroundColor: 'white',\n                        borderRadius: \"20px\",\n                        color: 'black',\n                        padding: '20px',\n                        maxWidth: '400px',\n                        width: '100%',\n                        boxSizing: 'border-box',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        overflow: 'hidden',\n                    }\n                }}\n            >\n                <DialogTitle sx={{ textAlign: 'center' }}>Select a platform</DialogTitle>\n                <DialogActions sx={{ flexDirection: 'column', gap: '10px', width: '100%' }}>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => handlePlatformClick(Platform.iOS)}\n                    >\n                        Download for iOS\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => handlePlatformClick(Platform.Android)}\n                    >\n                        Download for Android\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default DownloadButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}