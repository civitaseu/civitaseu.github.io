{"ast":null,"code":"var _jsxFileName = \"/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/download_button.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle, List, ListItem, ListItemText } from '@mui/material';\nimport styles from 'utilities/global_styles.module.css';\n\n// Define the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n\n  // Handle dialog open\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Handle dialog close\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleIOSClick = () => {\n    console.log('Option 1 clicked');\n    handleClose();\n  };\n\n  // Handle option 2 click\n  const handleAndroidClick = () => {\n    console.log('Option 2 clicked');\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: styles.actionButtonPrimary,\n      onClick: handleClickOpen,\n      children: \"Download App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        sx: {\n          backgroundColor: 'orange',\n          color: 'white',\n          padding: '20px'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Select a platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: handleIOSClick,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"iOS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: handleAndroidClick,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Android\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(DownloadButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","useState","Button","Dialog","DialogActions","DialogTitle","List","ListItem","ListItemText","styles","jsxDEV","_jsxDEV","DownloadButton","_s","open","setOpen","handleClickOpen","handleClose","handleIOSClick","console","log","handleAndroidClick","children","variant","className","actionButtonPrimary","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","PaperProps","sx","backgroundColor","color","padding","button","primary","_c","$RefreshReg$"],"sources":["/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/download_button.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material';\nimport styles from 'utilities/global_styles.module.css'\n\n// Define the component\nconst DownloadButton = () => {\n    const [open, setOpen] = useState<boolean>(false);\n\n    // Handle dialog open\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    // Handle dialog close\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleIOSClick = () => {\n        console.log('Option 1 clicked');\n        handleClose();\n      };\n    \n      // Handle option 2 click\n      const handleAndroidClick = () => {\n        console.log('Option 2 clicked');\n        handleClose();\n      };\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\" className={styles.actionButtonPrimary} onClick={handleClickOpen}>Download App</Button>\n            <Dialog open={open} onClose={handleClose} PaperProps={{\n          sx: {\n            backgroundColor: 'orange',\n            color: 'white',\n            padding: '20px'\n          }\n        }}>\n                <DialogTitle>Select a platform</DialogTitle>\n                <DialogActions>\n                <List>\n            <ListItem button onClick={handleIOSClick}>\n\n              <ListItemText primary=\"iOS\" />\n            </ListItem>\n            <ListItem button onClick={handleAndroidClick}>\n    \n              <ListItemText primary=\"Android\" />\n            </ListItem>\n          </List>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default DownloadButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}