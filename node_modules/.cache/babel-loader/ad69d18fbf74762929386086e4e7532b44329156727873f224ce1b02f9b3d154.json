{"ast":null,"code":"var _jsxFileName = \"/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/app_download_button.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, ListItem, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let Platform = /*#__PURE__*/function (Platform) {\n  Platform[\"iOS\"] = \"iOS\";\n  Platform[\"Android\"] = \"Android\";\n  return Platform;\n}({});\nconst AppDownloadButton = ({\n  platform\n}) => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const getImageSrc = () => {\n    return platform === Platform.Android ? 'img/googleplay.svg' : 'img/appstore.svg';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        '&:hover': {\n          backgroundColor: 'transparent',\n          boxShadow: 'none'\n        }\n      },\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageSrc(),\n        alt: `${platform} store button`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      sx: {\n        '& .MuiDialog-paper': {\n          padding: '30px',\n          // Add padding to the dialog\n          textAlign: 'center' // Center-align the title and content\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          textAlign: 'center',\n          paddingBottom: '0px'\n        },\n        children: \"Coming Soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Stay tuned for updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          sx: {\n            padding: '10px 20px',\n            // Add padding to the list item\n            justifyContent: 'center',\n            // Center-align the list item\n            textAlign: 'center',\n            width: '100%',\n            // Ensure it takes up the full width\n            borderRadius: '8px',\n            // Add some border-radius to make it look like a button\n            backgroundColor: '#f0f0f0',\n            // Optional: Change background color for better visibility\n            '&:hover': {\n              backgroundColor: '#e0e0e0' // Slightly darker on hover\n            }\n          },\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"button\",\n            sx: {\n              fontWeight: 600\n            },\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AppDownloadButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = AppDownloadButton;\nexport default AppDownloadButton;\nvar _c;\n$RefreshReg$(_c, \"AppDownloadButton\");","map":{"version":3,"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","ListItem","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","Platform","AppDownloadButton","platform","_s","open","setOpen","handleClickOpen","handleClose","getImageSrc","Android","children","sx","backgroundColor","border","boxShadow","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClose","padding","textAlign","paddingBottom","variant","justifyContent","button","width","borderRadius","fontWeight","_c","$RefreshReg$"],"sources":["/Users/nikolayandonov/Documents/Projects/React/civitas/civitas-landing-page/src/components/app_download_button.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, ListItem, Typography } from '@mui/material';\n\nexport enum Platform {\n    iOS = 'iOS',\n    Android = 'Android',\n}\n\ninterface AppDownloadButtonProps {\n    platform: Platform;\n}\n\nconst AppDownloadButton: React.FC<AppDownloadButtonProps> = ({ platform }) => {\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const getImageSrc = () => {\n        return platform === Platform.Android ? 'img/googleplay.svg' : 'img/appstore.svg';\n    };\n\n    return (\n        <>\n            <Button\n                sx={{\n                    backgroundColor: 'transparent',\n                    border: 'none',\n                    '&:hover': {\n                        backgroundColor: 'transparent',\n                        boxShadow: 'none',\n                    },\n                }}\n                onClick={handleClickOpen}\n            >\n                <img src={getImageSrc()} alt={`${platform} store button`} />\n            </Button>\n\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                sx={{\n                    '& .MuiDialog-paper': {\n                        padding: '30px', // Add padding to the dialog\n                        textAlign: 'center', // Center-align the title and content\n                    },\n                }}\n            >\n                <DialogTitle sx={{ textAlign: 'center', paddingBottom: '0px' }}>\n                    {\"Coming Soon\"}\n                </DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"body1\">Stay tuned for updates</Typography>\n                </DialogContent>\n                <DialogActions sx={{ justifyContent: 'center' }}>\n                    <ListItem\n                        button\n                        sx={{\n                            padding: '10px 20px', // Add padding to the list item\n                            justifyContent: 'center', // Center-align the list item\n                            textAlign: 'center',\n                            width: '100%', // Ensure it takes up the full width\n                            borderRadius: '8px', // Add some border-radius to make it look like a button\n                            backgroundColor: '#f0f0f0', // Optional: Change background color for better visibility\n                            '&:hover': {\n                                backgroundColor: '#e0e0e0', // Slightly darker on hover\n                            },\n                        }}\n                        onClick={handleClose}\n                    >\n                        <Typography variant=\"button\" sx={{ fontWeight: 600 }}>OK</Typography>\n                    </ListItem>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nexport default AppDownloadButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}